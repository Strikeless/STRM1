Accumulator and variable control
    // Defines the variable for further use
    DefineVar { var }

    // Load constant value to input accumulators
    LoadIAConst { value }
    LoadIBConst { value }

    // Load variable value to input accumulators
    LoadIAVar { var }
    LoadIBVar { var }

    // Store output accumulator value to variable
    StoreOVar { var }

Data manipulation
    Cpy     // O = IA
    Add     // O = IA + IB
    Sub     // O = IA - IB

Flow control
    // Defines the label at the current position in code for further use
    DefineLabel { label }

    // Continue execution at the label unconditionally
    GotoLabel { label }

    // Continue execution at one of the labels depending on whether input accumulator A is zero
    BranchLabelZero { true_label, false_label }

    // Continue execution at one of the labels depending on whether both input accumulators are equal
    BranchLabelEqual { true_label, false_label }
